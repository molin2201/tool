<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <springProperty scope="context" name="logHome" source="log.home"/>

    <property name="file.format" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] ${host} [%thread] [%level] [%logger{36}:%-4line] - %msg%n"/>
    <property name="queue.size" value="256"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${file.format}</pattern>
        </encoder>
    </appender>


    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logHome}/sys_${host}.log</file>
        <!--拒绝ERROR日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logHome}/sys_${host}-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>            <!--最长保存90天，超过会删除-->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${file.format}</pattern>
        </encoder>
    </appender>



    <appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logHome}/sys-err_${host}.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logHome}/sys-err_${host}-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>10MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${file.format}</pattern>
        </encoder>
    </appender>


    <!-- 异步输出 -->
    <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queue.size}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="STDOUT"/>
        <!-- add the following line -->
        <includeCallerData>true</includeCallerData>
    </appender>
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queue.size}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
        <!-- add the following line -->
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name="ASYNC_FILE-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queue.size}</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE-ERROR"/>
        <!-- add the following line -->
        <includeCallerData>true</includeCallerData>
    </appender>


    <logger name="com.zy" level="INFO"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.apache.tomcat" level="WARN"/>
    <logger name="org.apache.catalina" level="INFO"/>
    <logger name="io.netty" level="INFO"/>
    <logger name="org.hibernate" level="INFO"/>
    <logger name="io.lettuce.core" level="WARN"/>
    <logger name="org.apache.coyote" level="WARN"/>
    <logger name="druid.sql" level="WARN" additivity="false"/>
    <logger name="org.mybatis.spring" level="INFO" additivity="false"/>


    <!-- 日志输出级别 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="ASYNC_STDOUT"/>
<!--            <appender-ref ref="ASYNC_FILE"/>-->
<!--            <appender-ref ref="ASYNC_FILE-ERROR"/>-->
        </root>
    </springProfile>

    <springProfile name="prod">
        <root level="ERROR">
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_FILE-ERROR"/>
        </root>
    </springProfile>

</configuration>